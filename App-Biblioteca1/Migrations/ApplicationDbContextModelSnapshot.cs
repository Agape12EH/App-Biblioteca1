// <auto-generated />
using System;
using App_Biblioteca1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App_Biblioteca1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App_Biblioteca1.Models.BookStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateStored")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuantityTotal")
                        .HasColumnType("int");

                    b.Property<string>("isbnBook")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BookStore");
                });

            modelBuilder.Entity("App_Biblioteca1.Models.Books", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("AgePublication")
                        .HasColumnType("date");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("App_Biblioteca1.Models.StateBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BooksId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Registrationdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("TakenActions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BooksId");

                    b.ToTable("StateBooks");
                });

            modelBuilder.Entity("App_Biblioteca1.Models.Books", b =>
                {
                    b.HasOne("App_Biblioteca1.Models.BookStore", "Store")
                        .WithMany("Books")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("App_Biblioteca1.Models.StateBook", b =>
                {
                    b.HasOne("App_Biblioteca1.Models.Books", "Books")
                        .WithMany("StateBooks")
                        .HasForeignKey("BooksId");

                    b.Navigation("Books");
                });

            modelBuilder.Entity("App_Biblioteca1.Models.BookStore", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("App_Biblioteca1.Models.Books", b =>
                {
                    b.Navigation("StateBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
